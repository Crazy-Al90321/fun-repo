{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sa747\\\\PycharmProjects\\\\autocomplete-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState } from 'react';\nimport Autocomplete from './components/Autocomplete'; // Import Autocomplete component\nimport LcsTable from './components/LcsTable'; // Import LcsTable component\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState(''); // User's input\n  const [suggestions, setSuggestions] = useState([]); // Suggestions for autocomplete\n  const [lcsTable, setLcsTable] = useState([]); // LCS Table (for visualizing dynamic programming table)\n\n  const handleInputChange = e => {\n    const newQuery = e.target.value;\n    setQuery(newQuery);\n\n    // Fetch autocomplete suggestions from backend (API)\n    if (newQuery.length > 1) {\n      axios.get(`http://localhost:5000/api/autocomplete?query=${newQuery}`).then(response => {\n        setSuggestions(response.data); // Set autocomplete suggestions\n      }).catch(error => console.error(\"Error fetching suggestions:\", error));\n    } else {\n      setSuggestions([]); // Clear suggestions if query is too short\n    }\n  };\n  const handleLcsCalculation = () => {\n    // Example LCS calculation (this should be based on your logic)\n    const seq1 = \"apple\";\n    const seq2 = \"applepie\";\n    const dpTable = calculateLcs(seq1, seq2);\n    setLcsTable(dpTable);\n  };\n  const calculateLcs = (str1, str2) => {\n    const m = str1.length;\n    const n = str2.length;\n    const dp = Array(m + 1).fill(null).map(() => Array(n + 1).fill(0));\n    for (let i = 1; i <= m; i++) {\n      for (let j = 1; j <= n; j++) {\n        if (str1[i - 1] === str2[j - 1]) {\n          dp[i][j] = dp[i - 1][j - 1] + 1;\n        } else {\n          dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n        }\n      }\n    }\n    return dp; // Return the DP table\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Autocomplete and LCS Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleInputChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      suggestions: suggestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLcsCalculation,\n      children: \"Calculate LCS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), lcsTable.length > 0 && /*#__PURE__*/_jsxDEV(LcsTable, {\n      table: lcsTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SbRDlnHJ2iJ6pVjKe4VXylnKE+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Autocomplete","LcsTable","axios","jsxDEV","_jsxDEV","App","_s","query","setQuery","suggestions","setSuggestions","lcsTable","setLcsTable","handleInputChange","e","newQuery","target","value","length","get","then","response","data","catch","error","console","handleLcsCalculation","seq1","seq2","dpTable","calculateLcs","str1","str2","m","n","dp","Array","fill","map","i","j","Math","max","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","table","_c","$RefreshReg$"],"sources":["C:/Users/sa747/PycharmProjects/autocomplete-app/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState } from 'react';\nimport Autocomplete from './components/Autocomplete'; // Import Autocomplete component\nimport LcsTable from './components/LcsTable'; // Import LcsTable component\nimport axios from 'axios';\n\nfunction App() {\n  const [query, setQuery] = useState(''); // User's input\n  const [suggestions, setSuggestions] = useState([]); // Suggestions for autocomplete\n  const [lcsTable, setLcsTable] = useState([]); // LCS Table (for visualizing dynamic programming table)\n\n  const handleInputChange = (e) => {\n    const newQuery = e.target.value;\n    setQuery(newQuery);\n\n    // Fetch autocomplete suggestions from backend (API)\n    if (newQuery.length > 1) {\n      axios\n        .get(`http://localhost:5000/api/autocomplete?query=${newQuery}`)\n        .then((response) => {\n          setSuggestions(response.data); // Set autocomplete suggestions\n        })\n        .catch((error) => console.error(\"Error fetching suggestions:\", error));\n    } else {\n      setSuggestions([]); // Clear suggestions if query is too short\n    }\n  };\n\n  const handleLcsCalculation = () => {\n    // Example LCS calculation (this should be based on your logic)\n    const seq1 = \"apple\";\n    const seq2 = \"applepie\";\n    const dpTable = calculateLcs(seq1, seq2);\n    setLcsTable(dpTable);\n  };\n\n  const calculateLcs = (str1, str2) => {\n    const m = str1.length;\n    const n = str2.length;\n    const dp = Array(m + 1).fill(null).map(() => Array(n + 1).fill(0));\n\n    for (let i = 1; i <= m; i++) {\n      for (let j = 1; j <= n; j++) {\n        if (str1[i - 1] === str2[j - 1]) {\n          dp[i][j] = dp[i - 1][j - 1] + 1;\n        } else {\n          dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n        }\n      }\n    }\n    return dp; // Return the DP table\n  };\n\n  return (\n    <div>\n      <h1>Autocomplete and LCS Table</h1>\n\n      {/* Autocomplete Input Field */}\n      <input\n        type=\"text\"\n        value={query}\n        onChange={handleInputChange}\n        placeholder=\"Start typing...\"\n      />\n\n      {/* Display Autocomplete Suggestions */}\n      <Autocomplete suggestions={suggestions} />\n\n      {/* Button to calculate and show LCS Table */}\n      <button onClick={handleLcsCalculation}>Calculate LCS</button>\n\n      {/* Display LCS Table */}\n      {lcsTable.length > 0 && <LcsTable table={lcsTable} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}